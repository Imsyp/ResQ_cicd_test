{
    "swagger": "2.0",
    "info": {
        "description": "API documentation",
        "title": "SDGP-team5-ResQ-BE",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:5100",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "check if the server is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Status"
                ],
                "summary": "check server status",
                "responses": {
                    "200": {
                        "description": "Server is running",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/auth/callback": {
            "get": {
                "description": "Handles the callback from Google after user grants permission, generates JWT.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Google OAuth2 Callback",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization Code",
                        "name": "code",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Missing code",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to fetch user info or generate JWT",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "get": {
                "description": "Redirects the user to Google login page for authentication.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Google OAuth2 Login",
                "responses": {
                    "307": {
                        "description": "Redirect to Google OAuth2 login",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/auth/protected": {
            "get": {
                "security": [
                    {
                        "BearerAuth  // This indicates the need for a Bearer token in the Authorization header": []
                    }
                ],
                "description": "Returns user info if the provided JWT token is valid. If the token is invalid or expired, the request is unauthorized.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Protected route that requires a valid JWT token",
                "responses": {
                    "200": {
                        "description": "Authorized\"  // Successful response with user info",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized\"  // Unauthorized if token is invalid or missing",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/refresh-token": {
            "post": {
                "description": "Accepts a valid refresh token and issues a new access token if the refresh token is valid. The refresh token should be passed in the request body.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refreshes the access token using a valid refresh token",
                "parameters": [
                    {
                        "description": "The refresh token used to generate a new access token",
                        "name": "refresh_token",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "access_token\"  // Returns the newly generated access token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request\"  // Invalid or malformed request body",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid refresh token\"  // If the refresh token is invalid",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Could not generate access token\"  // If there is an issue generating the access token",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/situation/actions/case/{slug}/{language}": {
            "get": {
                "description": "Retrieve the actions for a specific situation based on its slug (text-based ID).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "situation"
                ],
                "summary": "Get Actions by Situation Slug",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Situation Slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Language",
                        "name": "language",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved situation and actions",
                        "schema": {
                            "$ref": "#/definitions/model.Situation"
                        }
                    },
                    "404": {
                        "description": "error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/situation/actions/{index}/{language}": {
            "get": {
                "description": "Retrieve the actions for a specific situation based on its index (numerical ID).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "situation"
                ],
                "summary": "Get Actions by Situation Index",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Situation Index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "en",
                        "description": "Language",
                        "name": "language",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved situation and actions",
                        "schema": {
                            "$ref": "#/definitions/model.Situation"
                        }
                    },
                    "400": {
                        "description": "error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ActionStep": {
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "step": {
                    "type": "string"
                }
            }
        },
        "model.MultiLangActions": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "$ref": "#/definitions/model.ActionStep"
                }
            }
        },
        "model.MultilingualArray": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "model.MultilingualText": {
            "type": "object",
            "additionalProperties": {
                "type": "string"
            }
        },
        "model.Situation": {
            "type": "object",
            "properties": {
                "actions": {
                    "$ref": "#/definitions/model.MultiLangActions"
                },
                "description": {
                    "$ref": "#/definitions/model.MultilingualArray"
                },
                "emer_title": {
                    "$ref": "#/definitions/model.MultilingualText"
                },
                "emoji": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        }
    }
}